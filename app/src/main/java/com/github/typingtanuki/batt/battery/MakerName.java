package com.github.typingtanuki.batt.battery;

import java.util.Locale;

public enum MakerName {
    ACCEL,
    ACCUTECH,
    ACER("エイサー"),
    ADATA,
    ADVENT,
    AFTERSHOCK,
    AHTEC,
    AIGO,
    AKOYA("MD"),
    ALBACOMP,
    ALCATEL,
    ALIENWARE("ALLENWARE"),
    AMAZON,
    AMILO,
    AMITECH,
    AOPEN,
    AORUS,
    APPLE("IPAD", "IPHONE", "MAC"),
    AQUADO,
    ARCHOS,
    ARIMA,
    ARISTO,
    ARM,
    ARROWS,
    ASI,
    ASM,
    AST,
    ASUS,
    ATOM,
    AUPS,
    AV,
    AVAYA,
    AVERATEC("AVERTAC"),
    AXIOO,
    BANGHOO,
    BAYCOM,
    BBEN,
    BECKER,
    BENQ,
    BETTY,
    BLACKBERRY,
    BLUEDISK,
    BOSE,
    BSI,
    BTO,
    BULLMAN,
    BYONE("BYON"),
    CANON,
    CASPER,
    CCE,
    CELXPERT,
    CENTORIS,
    CES,
    CHEM,
    CHEMBOOK,
    CHICONY,
    CHILIGREEN,
    CHUWI,
    CJSCOPE,
    CLEVO,
    CLOVER,
    CMS,
    COMMAX,
    COMPAL,
    COMPAQ,
    CTL,
    CUBE,
    CX,
    CYBERCOM,
    CYBERPOWER,
    CYTRON,
    DATRON,
    DELL,
    DEVILTECH,
    DEXP,
    DESTEN,
    DFI,
    DNS,
    DOSPARA("DOSUPARA"),
    DRLL,
    DTK,
    DUAL,
    DURABOOK,
    DURACELL,
    DYNABOOK,
    E_SYSTEM,
    E_MACHINES("EMACHINE", "EMACHINES"),
    ECS,
    EI_SYSTEMS,
    ELITEGROUP,
    ELUKTRONIKS("ELUKTRONICS"),
    EMATIC,
    ENDEAVOR,
    ENGENIO,
    ENZ,
    ENZO,
    EPSON,
    EQUUS,
    ERGO,
    ESSENTIEL,
    ETECH,
    ETWORK,
    EUROCOM,
    EVESHAM_ZIEO,
    EVGA,
    EVOO,
    FIC,
    FORTUNE,
    FOUNDER,
    FREVENTS,
    FRONTIER,
    FUJITSU,
    GAMATECH,
    GATEWAY("GATWAY"),
    GEMINI,
    GENERAL,
    GENEX,
    GENUINE,
    GERICOM,
    GETAK("GETAC"),
    GIGABYTE,
    GIGASET,
    GOBOXX,
    GOOGLE,
    GP,
    GPD,
    GREATWALL("GREAT_WALL"),
    GREFU,
    GURU,
    GXNOVA,
    HAIER,
    HANNSPREE("HANSPREE"),
    HASEE,
    HASWELL,
    HCL,
    HEDY,
    HERCULES,
    HI_GRADE,
    HIPAA,
    HITACHI,
    HONOR,
    HP,
    HTC,
    HUAWEI,
    HYPERDATA("HYBERDATA"),
    IBM,
    IBUYPOWER,
    IEI,
    IIYAMA,
    INSYS,
    INTEL,
    IOTA,
    IPC,
    IRBIS,
    ISSAM,
    ITE,
    ITRONIX,
    JBL,
    JDSU,
    JETTBOOK("JETBOOK"),
    JETTA,
    JUMPER,
    KAPOK,
    KDS,
    KENDAL,
    KENNEX,
    KIANO,
    KIOSK,
    KOGAN,
    KOHJINSHA,
    KUNSHAN,
    LDLC,
    LEADER,
    LEMEL,
    LENOVO("LENOV"),
    LG,
    LIFETEC,
    LION,
    LIVEFAN,
    LSI,
    LUVBOOK,
    MACBOOK,
    MACHENIKE,
    MAGITRONIC,
    MAIBENBEN,
    MAIMAI,
    MAINGEAR,
    MALATA,
    MARIO,
    MAX,
    MAXDATA,
    MBO,
    MCNAIR("MCNAIL"),
    MECER,
    MECHREVO,
    MEDIABOOK,
    MEDION,
    MEGA,
    MEGAWARE,
    MESSBON,
    METABOX,
    MICRON,
    MICROSOFT,
    MICROTECH,
    MITAC,
    MIVVY,
    MOBINOTE,
    MODENMA,
    MOLICEL,
    MOTION,
    MOTOROLA,
    MOUNTAIN,
    MOUSE,
    MPC,
    MSI,
    MVGOS,
    MYBOOK,
    NATCOMP,
    NAUTILUS,
    NEC,
    NEO,
    NETAPP,
    NETBOOK,
    NETWORK,
    NEXOC,
    NEXTGEAR_NOTE,
    NEXUS,
    NINTENDO,
    NOBILIS,
    NOKIA,
    NOTEBOOK,
    NOTINO,
    NOVATECH,
    NUVISION,
    NVIDIA,
    NVMEM,
    OEGSTONE,
    OLEVIA,
    OLIVETTI,
    OMRON,
    ONDA,
    ONKYO,
    ORIGIN,
    OSIRIS,
    OTDR,
    OVERPOWERED,
    OWL_COMPUTERS,
    PACKARD_BELL("PACKARD"),
    PANASONIC,
    PATRIOT,
    PCSMART,
    PCSPECIALIST("PC_SPECIALIS"),
    PEACOCK,
    PEAQ,
    PEGATRON,
    PHILCO,
    PHILIPS("PHILIP"),
    PIONEER,
    POINTER,
    POSH_BOOK,
    POSITIVO,
    POTEVIO,
    POWERSPEC,
    POWERVAULT,
    PRESARIO,
    PRESTIGIO,
    PROLINE,
    PROVIEW,
    PURISM,
    QDI,
    QRTECH,
    QUANTA,
    RAZER,
    RM,
    ROCK_PEGASUS,
    ROVER,
    ROVERBOOK,
    RRC,
    SAGER,
    SAHARA,
    SAMSUNG("SAMSUMG", "SUMSANG", "SUMSUNG"),
    SANYO,
    SAY,
    SCHENKER,
    SCUD,
    SEANIX,
    SHARP,
    SHINELON,
    SIEMENS,
    SIM,
    SIMANTIC,
    SIMATIC,
    SIMPLO,
    SKODA,
    SMARTBOOK,
    SMP,
    SOLUS,
    SONY,
    SOTEC,
    STAMP,
    STEPNOTE,
    SUN,
    SUNPAK,
    SUPER,
    SYLVANIA,
    SYSTEM76,
    SYSTEMAX,
    TABLETKIOSK,
    TAIWAN_MOBILE,
    TAN,
    TARGA,
    TAROX,
    TATUNG,
    TCL,
    TECLAST,
    TEHOM,
    TERRA,
    TERRANS_FORCE,
    TFTH,
    TG,
    THTF,
    THUNDEROBOT,
    TIGER,
    TONGFANG("TONFANG"),
    TOPSTAR,
    TOSHIBA,
    TRANSOURCE,
    TREKSTOR,
    TRIGEM,
    TRONIC5,
    TSUNAMI,
    TUXEDO,
    TWINHEAD,
    TWINMATE,
    UNIS,
    UNIWILL("UNWILL"),
    VAIO,
    VEGA,
    VENOM,
    VERIFONE("VERFONE"),
    VIEWSONIC,
    VIKNIGHT,
    VISION,
    VIT,
    VIVO,
    VIZIO,
    VOBIS,
    VULCAN,
    VYE,
    WACOM,
    WEBSHOX,
    WEBTECH,
    WINBOOK,
    WIND,
    WISTRON,
    WITBAT,
    WOOKING,
    WORTMAN,
    WYSE,
    XERON,
    XIAOMI,
    XMG,
    XPLORE,
    XTABLET,
    YAKUMA("YAKUMO"),
    ZITECH,
    ZOOSTORM,
    ZTE,

    OTHER("1TEGRATION_NOTE", "MI");

    private final String[] alternate;

    MakerName(String... alternate) {
        this.alternate = alternate;
    }

    public static MakerName parse(String target) {
        String s = target.toUpperCase(Locale.ENGLISH).strip()
                .replaceAll("\\.+", "")
                .replaceAll("[\\s-]+", "_");
        try {
            return MakerName.valueOf(s);
        } catch (IllegalArgumentException e) {
            // Let's do it manually
        }

        for (MakerName candidate : MakerName.values()) {
            if (s.startsWith(candidate.name())) {
                return candidate;
            }
            if (s.endsWith(candidate.name())) {
                return candidate;
            }
            for (String alternate : candidate.alternate) {
                if (s.startsWith(alternate)) {
                    return candidate;
                }
            }
        }

        throw new IllegalArgumentException("No maker called " + s);
    }
}
