/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.github.typingtanuki.batt;

import com.github.typingtanuki.batt.battery.Battery;
import com.github.typingtanuki.batt.battery.BatteryComparator;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;

import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.LinkedHashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;

import static com.github.typingtanuki.batt.scrapper.BatteryDetailReader.extractBatteryDetails;
import static com.github.typingtanuki.batt.scrapper.BatteryLister.listBatteries;
import static com.github.typingtanuki.batt.utils.CachedHttp.http;

public class App {
    public static void main(String[] args) {
        Map<String, Battery> found = new LinkedHashMap<>();
        try {
            List<String> makers = extractMakers();
            for (String maker : makers) {
                List<Battery> batteries = listBatteries(maker);
                if (batteries.isEmpty()) {
                    continue;
                }

                for (Battery battery : batteries) {
                    extractBatteryDetails(battery);
                    if (battery.isValid()) {
                        found.put(battery.getModel(), battery);
                    }
                }
            }

            List<Battery> batteries = new LinkedList<>(found.values());
            batteries.sort(new BatteryComparator());

            Path out = Paths.get("detected.md");

            StringBuilder output = new StringBuilder();
            output.append("Found: ")
                    .append(batteries.size())
                    .append("\r\n\r\n")
                    .append(Battery.tableHeader())
                    .append("\r\n");
            for (Battery battery : batteries) {
                output.append(battery.asTable()).append("\r\n");
            }
            Files.write(out, output.toString().getBytes(StandardCharsets.UTF_8));
            System.out.println();
            System.out.println("Done");
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private static List<String> extractMakers() throws IOException {
        List<String> out = new LinkedList<>();
        Document index = http("https://www.newlaptopaccessory.com/laptop-batteries-c-1.html");
        Elements makers = index.select(".categoryListBoxContents > a");
        for (Element maker : makers) {
            out.add(maker.attr("href"));
        }
        return out;
    }
}
